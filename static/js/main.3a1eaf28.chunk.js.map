{"version":3,"sources":["components/Section.jsx","components/Notification.jsx","components/Statistics.jsx","components/FeedbackOptions.jsx","components/App.jsx","index.js"],"names":["Section","title","children","Notification","message","Statistics","stats","total","positivePercentage","map","stat","join","uuid","FeedbackOptions","options","onLeaveFeedback","Object","keys","key","type","onClick","uuidv4","App","state","good","neutral","bad","leaveFeedback","setState","prevState","countTotalFeedback","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","round","makeStatisticsList","entries","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICGE,SAASC,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACjD,OACE,cAACR,EAAD,CAASC,MAAO,aAAhB,SACGM,EAAQ,EACP,+BACGD,EAAMG,KAAI,SAACC,GAAD,OACT,6BAAkBA,EAAKC,KAAK,OAAnBC,kBAEX,yCACS,+BAAOL,OAEhB,qDACqB,iCAAOC,EAAP,aAIvB,cAACL,EAAD,CAAcC,QAAS,wBCjBhB,SAASS,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACf,EAAD,CAASC,MAAO,wBAAhB,SACGe,OAAOC,KAAKH,GAASL,KAAI,SAACS,GAAD,OACxB,wBACEC,KAAK,SACLC,QAAS,kBAAML,EAAgBG,IAFjC,SAKGA,GAFIG,oB,ICLMC,E,4MAKnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,cAAgB,SAACR,GACf,EAAKS,UAAS,SAACC,GACb,OAAO,eACJV,EAAOU,EAAUV,GAAQ,O,EAKhCW,mBAAqB,WACnB,OAAOd,OAAOe,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAGrEC,gCAAkC,WAChC,IAAM5B,EAAQ,EAAKuB,qBAEnB,OAAOvB,EAAQ,EAAI6B,KAAKC,MAAO,EAAKd,MAAMC,KAAOjB,EAAS,KAAO,G,EAGnE+B,mBAAqB,WACnB,OAAOtB,OAAOuB,QAAQ,EAAKhB,Q,uDAI3B,IAAMhB,EAAQiC,KAAKV,qBAEnB,OACE,qCACE,cAACjB,EAAD,CACEC,QAAS0B,KAAKjB,MACdR,gBAAiByB,KAAKb,gBAExB,cAACtB,EAAD,CACEC,MAAOkC,KAAKF,qBACZ/B,MAAOA,EACPC,mBAAoBgC,KAAKL,2C,GA7CFM,aAAZnB,EAGZoB,aAAe,GCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3a1eaf28.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","export default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n","import { v4 as uuid } from \"uuid\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\n\nexport default function Statistics({ stats, total, positivePercentage }) {\n  return (\n    <Section title={\"Statistics\"}>\n      {total > 0 ? (\n        <ul>\n          {stats.map((stat) => (\n            <li key={uuid()}>{stat.join(\": \")}</li>\n          ))}\n          <li>\n            total: <span>{total}</span>\n          </li>\n          <li>\n            positive feedback: <span>{positivePercentage}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={\"No feedback given\"} />\n      )}\n    </Section>\n  );\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport Section from \"./Section\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <Section title={\"Please leave feedback\"}>\n      {Object.keys(options).map((key) => (\n        <button\n          type=\"button\"\n          onClick={() => onLeaveFeedback(key)}\n          key={uuidv4()}\n        >\n          {key}\n        </button>\n      ))}\n    </Section>\n  );\n}\n","import { Component } from \"react\";\n\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions\";\n\nexport default class App extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = (type) => {\n    this.setState((prevState) => {\n      return {\n        [type]: prevState[type] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n\n    return total > 0 ? Math.round((this.state.good / total) * 100) : 0;\n  };\n\n  makeStatisticsList = () => {\n    return Object.entries(this.state);\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n\n    return (\n      <>\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.leaveFeedback}\n        />\n        <Statistics\n          stats={this.makeStatisticsList()}\n          total={total}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}